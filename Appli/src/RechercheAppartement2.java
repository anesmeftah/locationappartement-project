/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
import java.awt.Color;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JFrame;
/**
 *
 * @author motaz
 */
public class RechercheAppartement2 extends javax.swing.JPanel {

    /**
     * Creates new form RechercheAppartement2
     */
    public RechercheAppartement2() {
        initComponents();
    }
        boolean isValidDate(String date, String format){
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(format);
        try{
            LocalDate.parse(date, formatter);
            return true;
        }
        catch(DateTimeParseException e){
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        MonthIn = new javax.swing.JTextField();
        DayIn = new javax.swing.JTextField();
        YearIn = new javax.swing.JTextField();
        MonthOut = new javax.swing.JTextField();
        DayOut = new javax.swing.JTextField();
        YearOut = new javax.swing.JTextField();
        LocF = new javax.swing.JTextField();
        SearchB = new javax.swing.JButton();
        ErrorMsg = new javax.swing.JLabel();

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 24)); // NOI18N
        jLabel1.setText("Availability");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel2.setText("Check-out date");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel3.setText("Location");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel4.setText("Check-in date");

        MonthIn.setText("Month");
        MonthIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MonthInMousePressed(evt);
            }
        });

        DayIn.setText("Day");
        DayIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DayInMousePressed(evt);
            }
        });
        DayIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayInActionPerformed(evt);
            }
        });

        YearIn.setText("Year");
        YearIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                YearInMousePressed(evt);
            }
        });

        MonthOut.setText("Month");
        MonthOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MonthOutMousePressed(evt);
            }
        });

        DayOut.setText("Day");
        DayOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DayOutMousePressed(evt);
            }
        });
        DayOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayOutActionPerformed(evt);
            }
        });

        YearOut.setText("Year");
        YearOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                YearOutMousePressed(evt);
            }
        });

        SearchB.setBackground(new java.awt.Color(33, 150, 243));
        SearchB.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        SearchB.setForeground(new java.awt.Color(255, 255, 255));
        SearchB.setText("Search");
        SearchB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DayOut, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MonthOut, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(YearOut, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(LocF, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(DayIn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(MonthIn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(YearIn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(60, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SearchB, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                            .addComponent(ErrorMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(LocF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(DayIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MonthIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YearIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(DayOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MonthOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YearOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(SearchB)
                .addGap(18, 18, 18)
                .addComponent(ErrorMsg)
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void MonthInMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MonthInMousePressed
        MonthIn.setText("");
    }//GEN-LAST:event_MonthInMousePressed

    private void DayInMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DayInMousePressed
        // TODO add your handling code here:
        DayIn.setText("");
    }//GEN-LAST:event_DayInMousePressed

    private void DayInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DayInActionPerformed

    private void YearInMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YearInMousePressed
        // TODO add your handling code here:
        YearIn.setText("");
    }//GEN-LAST:event_YearInMousePressed

    private void MonthOutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MonthOutMousePressed
        // TODO add your handling code here:
        MonthOut.setText("");
    }//GEN-LAST:event_MonthOutMousePressed

    private void DayOutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DayOutMousePressed
        // TODO add your handling code here:
        DayOut.setText("");
    }//GEN-LAST:event_DayOutMousePressed

    private void DayOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayOutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DayOutActionPerformed

    private void YearOutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YearOutMousePressed
        // TODO add your handling code here:
        YearOut.setText("");
    }//GEN-LAST:event_YearOutMousePressed

    private void SearchBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBActionPerformed
        // TODO add your handling code here:
        String DI = DayIn.getText();
        String MI = MonthIn.getText();
        String YI = YearIn.getText();
        String DO = DayOut.getText();
        String MO = MonthOut.getText();
        String YO = YearOut.getText();
        String Loc = LocF.getText();

        try{

            String date = YI + "-" + MI + "-" + DI;
            if(!isValidDate(date, "yyyy-MM-dd")){
                throw new Exception("not valid check in date");
            }
            String outdate = YO + "-" + MO + "-" + DO;
            if(!isValidDate(outdate, "yyyy-MM-dd")){
                throw new Exception("not valid check-out date");
            }
            String host = "jdbc:mysql://127.0.0.1:3306/locationappartement";
            String uName = "root";
            String uPass = "root";

            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();

            String SQL = "SELECT * " +
             "FROM appartement a " +
             "WHERE a.ADDRESS LIKE '%" + Loc + "%' " +
             "  AND NOT EXISTS ( " +
             "      SELECT 1 " +
             "      FROM reservation r2 " +
             "      WHERE r2.ID_APPARTEMENT = a.ID " +
             "        AND ( " +
             "            ('" + date + "' BETWEEN r2.DATEDEBUT AND r2.DATEFIN) OR " +
             "            ('" + outdate + "' BETWEEN r2.DATEDEBUT AND r2.DATEFIN) OR " +
             "            (r2.DATEDEBUT BETWEEN '" + date + "' AND '" + outdate + "') OR " +
             "            (r2.DATEFIN BETWEEN '" + date + "' AND '" + outdate + "') " +
             "        ) " +
             "  )";

            ResultSet rs = stmt.executeQuery(SQL);
            
            
            JFrame mainFrame = (JFrame)javax.swing.SwingUtilities.getWindowAncestor(this);
            SearchResult2 search = new SearchResult2(rs,date,outdate);
            mainFrame.getContentPane().removeAll();
            mainFrame.getContentPane().add(search);
                
                
                
            mainFrame.setLayout(new java.awt.FlowLayout());
            mainFrame.setLocationRelativeTo(null);   // Center the window
            mainFrame.repaint();
            mainFrame.revalidate();
            
        }
        catch(Exception e){
            ErrorMsg.setText(e.getMessage());
        }

    }//GEN-LAST:event_SearchBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DayIn;
    private javax.swing.JTextField DayOut;
    private javax.swing.JLabel ErrorMsg;
    private javax.swing.JTextField LocF;
    private javax.swing.JTextField MonthIn;
    private javax.swing.JTextField MonthOut;
    private javax.swing.JButton SearchB;
    private javax.swing.JTextField YearIn;
    private javax.swing.JTextField YearOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
